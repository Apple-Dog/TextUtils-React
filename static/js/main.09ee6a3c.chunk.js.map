{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleColor","toggleMode","htmlFor","TextForm","handleClearClick","setText","useState","text","style","color","heading","value","onChange","event","target","backgroundColor","txaColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","trim","length","defaultProps","aboutText","Alert","alert","role","msg","App","setMode","setAlert","setTxaColor","message","setTimeout","addEventListener","body","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4LAMe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACI,sBAAKD,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeE,KAAK,GAAjC,SAAqCH,EAAMI,QAC3C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAMJ,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACI,oBAAIL,UAAU,kCAAd,SACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,GAAxD,sBAUJ,sBAAKG,GAAG,WAAR,UACQ,wBAAQL,UAAU,sBAAsBK,GAAG,KAAKC,QAASP,EAAMQ,cAC/D,wBAAQP,UAAU,sBAAsBK,GAAG,KAAKC,QAASP,EAAMQ,cAC/D,wBAAQP,UAAU,sBAAsBK,GAAG,KAAKC,QAASP,EAAMQ,cAC/D,wBAAQP,UAAU,sBAAsBK,GAAG,KAAKC,QAASP,EAAMQ,cAC/D,wBAAQP,UAAU,sBAAsBK,GAAG,KAAKC,QAASP,EAAMQ,iBAGtE,sBAAKP,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACG,uBAAOD,UAAU,wBAAwBM,QAASP,EAAMS,WAAYJ,KAAK,WAAWC,GAAG,2BACvF,uBAAOL,UAAU,mBAAmBS,QAAQ,yBAA5C,SAAmF,UAAbV,EAAME,KAAe,kBAAkB,gCCjC1H,SAASS,EAASX,GAEjC,IAYMY,EAAmB,WAGrBC,EADY,KAwBZ,EAAwBC,mBAAS,mBAAjC,mBAAOC,EAAP,KAAaF,EAAb,KAKA,OACI,qCACI,sBAAKZ,UAAU,YAAYe,MAAO,CAACC,MAAoB,SAAbjB,EAAME,KAAc,QAAQ,SAAtE,UACY,oBAAID,UAAU,mBAAd,SAAkCD,EAAMkB,UAExC,qBAAKjB,UAAU,OAAf,SACA,0BAAUA,UAAU,eAAekB,MAAOJ,EAAMR,QAASK,EAAkBQ,SA/B5E,SAACC,GAEpBR,EAAQQ,EAAMC,OAAOH,QA6BoGH,MAAO,CAACO,gBAAgC,SAAfvB,EAAME,KAAkBF,EAAMwB,SAAW,QAAQP,MAAoB,SAAbjB,EAAME,KAAc,QAAQ,SAAUI,GAAG,QAAQmB,KAAK,QAE5O,wBAAQxB,UAAU,uBAAuBM,QAnD3C,WAElB,IAAImB,EAAQX,EAAKY,cACjBd,EAAQa,GACR1B,EAAM4B,UAAU,yBAAyB,YA+CrB,kCACA,wBAAQ3B,UAAU,uBAAuBM,QA9C3C,WAElB,IAAImB,EAAQX,EAAKc,cACjBhB,EAAQa,GACR1B,EAAM4B,UAAU,yBAAyB,YA0CrB,kCACA,wBAAQ3B,UAAU,uBAAuBM,QAASK,EAAlD,wBACA,wBAAQX,UAAU,uBAAuBM,QAhC9C,WAEf,IAAIQ,EAAKe,SAASC,eAAe,SACjChB,EAAKiB,SACLC,UAAUC,UAAUC,UAAUpB,EAAKI,OACnCnB,EAAM4B,UAAU,sBAAsB,YA2BlB,kBACA,wBAAQ3B,UAAU,uBAAuBM,QA1BvC,WAEtB,IAAImB,EAAQX,EAAKqB,MAAM,QACvBvB,EAAQa,EAAQW,KAAK,MACrBrC,EAAM4B,UAAU,uBAAuB,YAsBnB,oCAIZ,sBAAK3B,UAAU,iBAAiBe,MAAO,CAACC,MAAoB,SAAbjB,EAAME,KAAc,QAAQ,SAA3E,UACI,mDACA,8BAAW,KAAPa,EAAW,EAAKA,EAAKuB,OAAOF,MAAM,KAAKG,OAA3C,cAA+DxB,EAAKwB,OAApE,mBAAmG,KAAPxB,EAAW,EAAK,KAAOA,EAAKuB,OAAOF,MAAM,KAAKG,OAA1I,4BACA,yCACA,4BAAIxB,EAAKwB,OAAO,EAAIxB,EAAO,qCDnB3ChB,EAAOyC,aAAe,CAClBpC,MAAO,gBACPqC,UAAW,S,MElCAC,MAhBf,SAAe1C,GAOX,OACIA,EAAM2C,OAAS,qBAAK1C,UAAS,sBAAiBD,EAAM2C,MAAMtC,KAA7B,gCAAiEuC,KAAK,QAApF,SAEX,iCAAS5C,EAAM2C,MAAME,SC0GlBC,MAvGf,WACE,MAAwBhC,mBAAS,SAAjC,mBAAOZ,EAAP,KAAa6C,EAAb,KACA,EAA0BjC,mBAAS,MAAnC,mBAAO6B,EAAP,KAAcK,EAAd,KACA,EAAgClC,mBAAS,WAAzC,mBAAOU,EAAP,KAAiByB,EAAjB,KAIMrB,EAAY,SAACsB,EAAQ7C,GACzB2C,EAAS,CACPH,IAAIK,EACJ7C,KAAKA,IAEP8C,YAAW,WACTH,EAAS,QACR,MA8DL,OACE,qCAEM,cAACjD,EAAD,CAAQK,MAAM,YAAYF,KAAMA,EAAMM,YA9D1B,WAGdsB,SAASC,eAAe,MAAMqB,iBAAiB,SAAQ,WACrDtB,SAASuB,KAAKrC,MAAMO,gBAAkB,UACtC0B,EAAY,cAEdnB,SAASC,eAAe,MAAMqB,iBAAiB,SAAQ,WACrDtB,SAASuB,KAAKrC,MAAMO,gBAAkB,UACtC0B,EAAY,cAEdnB,SAASC,eAAe,MAAMqB,iBAAiB,SAAQ,WACrDtB,SAASuB,KAAKrC,MAAMO,gBAAkB,UACtC0B,EAAY,cAGdnB,SAASC,eAAe,MAAMqB,iBAAiB,SAAQ,WACrDtB,SAASuB,KAAKrC,MAAMO,gBAAkB,UACtC0B,EAAY,cAEdnB,SAASC,eAAe,MAAMqB,iBAAiB,SAAQ,WACrDtB,SAASuB,KAAKrC,MAAMO,gBAAkB,UACtC0B,EAAY,eAwCoDxC,WAjCrD,WAEL,UAATP,GACD6C,EAAQ,QACRjB,SAASuB,KAAKrC,MAAMO,gBAAkB,UACtCO,SAASC,eAAe,YAAYf,MAAMsC,QAAQ,QAClDxB,SAAS1B,MAAM,wBACfwB,EAAU,oBAAoB,aAa9BmB,EAAQ,SACRjB,SAASuB,KAAKrC,MAAMO,gBAAkB,QACtCO,SAAS1B,MAAM,yBACf0B,SAASC,eAAe,YAAYf,MAAMsC,QAAQ,OAClD1B,EAAU,qBAAqB,eAU1B,cAAC,EAAD,CAAOe,MAAOA,IACd,qBAAK1C,UAAU,iBAAf,SAQa,cAACU,EAAD,CAAUiB,UAAWA,EAAWV,QAAQ,kCAAkCM,SAAUA,EAAUtB,KAAMA,UC5F7GqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1BwB,K","file":"static/js/main.09ee6a3c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n/* import { Link } from 'react-router-dom'; */\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                        <div id=\"disBlock\">\r\n                                <button className=\"button button0 mx-2\" id=\"b0\" onClick={props.toggleColor}></button>\r\n                                <button className=\"button button1 mx-2\" id=\"b1\" onClick={props.toggleColor}></button>\r\n                                <button className=\"button button2 mx-2\" id=\"b2\" onClick={props.toggleColor}></button>\r\n                                <button className=\"button button3 mx-2\" id=\"b3\" onClick={props.toggleColor}></button>\r\n                                <button className=\"button button4 mx-2\" id=\"b4\" onClick={props.toggleColor}></button>\r\n                        </div>\r\n\r\n                         <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                            <input className=\"form-check-input mx-1\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='light'?\"Enable DarkMode\":\"Enable LightMode\"}</label>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set Text Here',\r\n    aboutText: 'About'\r\n  };","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\nconst handleUpClick = () => {\r\n    // console.log(\"UpperCase Was Clicked: \"+text);\r\n    let newText=text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to UpperCase\",\"success\")\r\n}\r\nconst handleLoClick = () => {\r\n    // console.log(\"UpperCase Was Clicked: \"+text);\r\n    let newText=text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to LowerCase\",\"success\")\r\n}\r\nconst handleClearClick = () => {\r\n  \r\n    let newText=\"\";\r\n    setText(newText)\r\n    \r\n}\r\nconst handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n}\r\nconst handleCopy = () => {\r\n    \r\n    var text=document.getElementById(\"myBox\")\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value)\r\n    props.showAlert(\"Copied to Clipboard\",\"success\")\r\n}\r\nconst handleExtraSpaces = () => {\r\n    \r\n    let newText=text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Removed Extra Spaces\",\"success\")\r\n}\r\n        \r\n\r\n\r\n    const [text, setText] = useState('Enter text here');\r\n\r\n    // text = \"new text\"; Wrong way to change state\r\n    // setText = (\"new text\");  Right way to change state\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n                        <h1 className=\"text-center mb-3\">{props.heading}</h1>\r\n\r\n                        <div className=\"mb-3\">\r\n                        <textarea className=\"form-control\" value={text} onClick={handleClearClick} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark' ? props.txaColor : 'white',color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n                        </div>\r\n                        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n                        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n                        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n                        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy</button>\r\n                        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n                \r\n            </div>\r\n            \r\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n                <h2>Your Text Summary</h2>\r\n                <p>{text===\"\"? 0 : (text.trim().split(\" \").length)} Words and {text.length} Characters and {text===\"\"? 0 : (0.008*(text.trim().split(\" \").length))} Takes Minutes to Read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0 ? text : \"Enter Something To Preview\"}</p>\r\n                            \r\n            </div>\r\n            \r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    /* const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    } */\r\n    \r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            {/* <strong>{capitalize(props.alert.msg)}</strong> */}\r\n            <strong>{props.alert.msg}</strong>\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//import logo from './logo.svg';\nimport './App.css';\n/* import About from './components/About'; */\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n/* import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"; */\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const [txaColor, setTxaColor] = useState('#061722')\n \n  \n \n  const showAlert = (message,type) => {\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 700);\n  }\n\n  const toggleColor = () => {\n\n    \n        document.getElementById('b0').addEventListener('click',function(){\n          document.body.style.backgroundColor = '#310505';\n          setTxaColor('#1c0707')\n        });\n        document.getElementById('b1').addEventListener('click',function(){\n          document.body.style.backgroundColor = '#323507';\n          setTxaColor('#181a00')\n        });\n        document.getElementById('b2').addEventListener('click',function(){\n          document.body.style.backgroundColor = '#052E03';\n          setTxaColor('#051c04')\n        });\n\n        document.getElementById('b3').addEventListener('click',function(){\n          document.body.style.backgroundColor = '#270F31';\n          setTxaColor('#15081a')\n        });\n        document.getElementById('b4').addEventListener('click',function(){\n          document.body.style.backgroundColor = '#08213B';\n          setTxaColor('#061722')\n        });\n     \n  }\n\n  \n\n  const toggleMode = () => {\n\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#08213B';\n      document.getElementById('disBlock').style.display='block';\n      document.title='TextUtils - Dark Mode';\n      showAlert(\"Dark Mode Enabled\",\"success\");\n\n      // Blinking Effect of Malicious Websites or PopUps/Advertisements\n      /* setInterval(() => {\n        document.title='TextUtils is Amazing';\n      }, 2000);\n      setInterval(() => {\n        document.title='Install TextUtils Now';\n      // }, 1500); */   \n      \n    }\n\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      document.title='TextUtils - Light Mode';\n      document.getElementById('disBlock').style.display='none';\n      showAlert(\"Light Mode Enabled\",\"success\");\n      \n    }\n    \n  }\n  \n  return (\n    <> \n    {/* <Router> */}\n          <Navbar title=\"TextUtils\" mode={mode} toggleColor={toggleColor} toggleMode={toggleMode}/>\n           <Alert alert={alert}/>\n           <div className=\"container my-3\">\n           {/* <Switch>\n\n                <Route path=\"/about\">\n                        <About/>\n                </Route> */}\n\n                {/* <Route path=\"/\"> */}\n                        <TextForm showAlert={showAlert} heading=\"Enter the Text to Analyse Below\" txaColor={txaColor} mode={mode}/>   \n                {/* </Route>\n\n            </Switch> */}\n            </div> \n    {/* </Router> */}\n\n          \n          \n               \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}